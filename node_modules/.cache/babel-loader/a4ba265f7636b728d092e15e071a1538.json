{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/project/typing/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const MAX_TYPED_KEYS = 30;\n  const [getTypedKeys, setTypedKeys] = useState([]);\n\n  const handleKeyDown = e => {\n    e.preventDefault();\n    const {\n      key\n    } = e;\n    setTypedKeys(prevTypedKeys => {\n      return [...prevTypedKeys, key].slice(MAX_TYPED_KEYS * -1);\n    });\n    console.log(\"key\", key);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    tabIndex: \"0\",\n    onKeyDown: handleKeyDown,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"valid-keys\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"matched\",\n        children: \"tes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"remainder\",\n        children: \"te\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typed-keys\",\n      children: getTypedKeys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completed-words\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"teste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"teste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"QRA+8UlSmJyvddYrZf5+GpabEQk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pedro/Documents/project/typing/src/App.js"],"names":["React","useState","App","MAX_TYPED_KEYS","getTypedKeys","setTypedKeys","handleKeyDown","e","preventDefault","key","prevTypedKeys","slice","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAMC,cAAc,GAAG,EAAvB;AAEA,QAAM,CAACC,YAAD,EAAeC,YAAf,IAA+BJ,QAAQ,CAAC,EAAD,CAA7C;;AAEA,QAAMK,aAAa,GAAIC,CAAD,IAAM;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAUF,CAAhB;AACAF,IAAAA,YAAY,CAAEK,aAAa,IAAG;AAC5B,aAAO,CAAC,GAAGA,aAAJ,EAAmBD,GAAnB,EAAwBE,KAAxB,CAA8BR,cAAc,GAAC,CAAC,CAA9C,CAAP;AACD,KAFW,CAAZ;AAIAS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,GAAnB;AACD,GARD;;AAUA,sBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,QAAQ,EAAC,GAApC;AAAwC,IAAA,SAAS,EAAEH,aAAnD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BF;AAA7B;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAeD,CA/BD;;GAAMF,G;;KAAAA,G;AAiCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\n\n\nconst App = () => {\n\n  const MAX_TYPED_KEYS = 30;\n\n  const [getTypedKeys, setTypedKeys] = useState([]);\n\n  const handleKeyDown = (e) =>{\n    e.preventDefault();\n    const { key } = e;\n    setTypedKeys((prevTypedKeys =>{\n      return [...prevTypedKeys, key].slice(MAX_TYPED_KEYS*-1);\n    }))\n\n    console.log(\"key\", key)\n  }\n\n  return (\n  <div className=\"container\" tabIndex=\"0\" onKeyDown={handleKeyDown}>\n    <div className=\"valid-keys\">\n      <span className=\"matched\">tes</span>\n      <span className=\"remainder\">te</span>\n    </div>\n    <div className=\"typed-keys\">{getTypedKeys}</div>\n    <div className=\"completed-words\">\n      <ol>\n        <li>teste</li>\n        <li>teste</li>\n      </ol>\n    </div>\n  </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}