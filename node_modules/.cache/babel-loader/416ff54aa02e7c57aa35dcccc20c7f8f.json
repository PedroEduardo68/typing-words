{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/project/typing/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport wordList from \"./resources/words.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MAX_TYPED_KEYS = 30;\n\nconst getWordFile = () => {\n  const index = Math.floor(Math.random() * wordList.length);\n  const word = wordList[index];\n  return word.toLowerCase();\n};\n\nconst isValidKey = (key, word) => {\n  if (!word) return false;\n  const result = word.split('').includes(key);\n  return result;\n};\n\nconst Word = ({\n  word,\n  validKeys\n}) => {\n  if (!word) return null;\n  const joinedKeys = validKeys.join('');\n  const matched = word.slice(0, joinedKeys.length);\n  const remainder = word.slice(joinedKeys.length);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"matched\",\n      children: matched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"remainder\",\n      children: remainder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Word;\n\nconst App = () => {\n  _s();\n\n  //console.log('word', getWordFile());\n  const [getTypedKeys, setTypedKeys] = useState([]);\n  const [getValidKeys, setValidKeys] = useState([]);\n  const [getcompletedWords, setcompletedWords] = useState([]);\n  const [getWord, setWord] = useState('');\n  useEffect(() => {\n    setWord(getWordFile());\n  }, []);\n\n  const handleKeyDown = e => {\n    e.preventDefault();\n    const {\n      key\n    } = e;\n    setTypedKeys(prevTypedKeys => {\n      return [...prevTypedKeys, key].slice(MAX_TYPED_KEYS * -1);\n    });\n\n    if (isValidKey(key, getWord)) {\n      setValidKeys(prev => {\n        const isValidLength = prev.length <= getWord.length;\n        const isNextChar = isValidLength && getWord[prev.length] === key;\n        console.log(prev, prev.length);\n        console.log(getWord);\n        console.log(isNextChar);\n        return isNextChar ? [...prev, key] : prev;\n      });\n    } //console.log(\"key\", key)\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    tabIndex: \"0\",\n    onKeyDown: handleKeyDown,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"valid-keys\",\n      children: /*#__PURE__*/_jsxDEV(Word, {\n        word: getWord,\n        validKeys: getValidKeys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typed-keys\",\n      children: getTypedKeys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completed-words\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"teste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"teste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"bMwEczPxPXTGy8r2lhpmWE/bBL8=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Word\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/pedro/Documents/project/typing/src/App.js"],"names":["React","useEffect","useState","wordList","MAX_TYPED_KEYS","getWordFile","index","Math","floor","random","length","word","toLowerCase","isValidKey","key","result","split","includes","Word","validKeys","joinedKeys","join","matched","slice","remainder","App","getTypedKeys","setTypedKeys","getValidKeys","setValidKeys","getcompletedWords","setcompletedWords","getWord","setWord","handleKeyDown","e","preventDefault","prevTypedKeys","prev","isValidLength","isNextChar","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAIA,MAAMC,cAAc,GAAG,EAAvB;;AAEA,MAAMC,WAAW,GAAG,MAAK;AACvB,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAeN,QAAQ,CAACO,MAAnC,CAAd;AACA,QAAMC,IAAI,GAAGR,QAAQ,CAACG,KAAD,CAArB;AACA,SAAOK,IAAI,CAACC,WAAL,EAAP;AACD,CAJD;;AAMA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMH,IAAN,KAAc;AAC/B,MAAG,CAACA,IAAJ,EAAU,OAAO,KAAP;AACV,QAAMI,MAAM,GAAGJ,IAAI,CAACK,KAAL,CAAW,EAAX,EAAeC,QAAf,CAAwBH,GAAxB,CAAf;AACA,SAAOC,MAAP;AACD,CAJD;;AAMA,MAAMG,IAAI,GAAE,CAAC;AAACP,EAAAA,IAAD;AAAMQ,EAAAA;AAAN,CAAD,KAAsB;AAChC,MAAG,CAACR,IAAJ,EAAU,OAAO,IAAP;AACV,QAAMS,UAAU,GAAGD,SAAS,CAACE,IAAV,CAAe,EAAf,CAAnB;AACA,QAAMC,OAAO,GAAGX,IAAI,CAACY,KAAL,CAAW,CAAX,EAAcH,UAAU,CAACV,MAAzB,CAAhB;AACA,QAAMc,SAAS,GAAGb,IAAI,CAACY,KAAL,CAAWH,UAAU,CAACV,MAAtB,CAAlB;AAEA,sBAAQ;AAAA,4BACN;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,gBAA2BY;AAA3B;AAAA;AAAA;AAAA;AAAA,YADM,eAEN;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BE;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFM;AAAA,kBAAR;AAID,CAVD;;KAAMN,I;;AAYN,MAAMO,GAAG,GAAG,MAAM;AAAA;;AAEhB;AAEA,QAAM,CAACC,YAAD,EAAeC,YAAf,IAA+BzB,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAAC0B,YAAD,EAAeC,YAAf,IAA+B3B,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAAC4B,iBAAD,EAAoBC,iBAApB,IAAyC7B,QAAQ,CAAC,EAAD,CAAvD;AACA,QAAM,CAAC8B,OAAD,EAAUC,OAAV,IAAqB/B,QAAQ,CAAC,EAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZgC,IAAAA,OAAO,CAAC5B,WAAW,EAAZ,CAAP;AACD,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAM6B,aAAa,GAAIC,CAAD,IAAM;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAAEtB,MAAAA;AAAF,QAAUqB,CAAhB;AACAR,IAAAA,YAAY,CAAEU,aAAa,IAAG;AAC5B,aAAO,CAAC,GAAGA,aAAJ,EAAmBvB,GAAnB,EAAwBS,KAAxB,CAA8BnB,cAAc,GAAC,CAAC,CAA9C,CAAP;AACD,KAFW,CAAZ;;AAIA,QAAGS,UAAU,CAACC,GAAD,EAAMkB,OAAN,CAAb,EAA4B;AAC1BH,MAAAA,YAAY,CAAES,IAAD,IAAQ;AACnB,cAAMC,aAAa,GAAGD,IAAI,CAAC5B,MAAL,IAAesB,OAAO,CAACtB,MAA7C;AACA,cAAM8B,UAAU,GAAGD,aAAa,IAAIP,OAAO,CAACM,IAAI,CAAC5B,MAAN,CAAP,KAAyBI,GAA7D;AAEA2B,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBA,IAAI,CAAC5B,MAAvB;AACA+B,QAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAGA,eAAQA,UAAD,GAAe,CAAC,GAAGF,IAAJ,EAAUxB,GAAV,CAAf,GAAgCwB,IAAvC;AACD,OAVW,CAAZ;AAWD,KAnByB,CAqB1B;;AACD,GAtBD;;AAwBA,sBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,QAAQ,EAAC,GAApC;AAAwC,IAAA,SAAS,EAAEJ,aAAnD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEF,OAAZ;AAAqB,QAAA,SAAS,EAAEJ;AAAhC;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BF;AAA7B;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAqBD,CA3DD;;GAAMD,G;;MAAAA,G;AA6DN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport wordList from \"./resources/words.json\"\n\n\n\nconst MAX_TYPED_KEYS = 30;\n\nconst getWordFile = () =>{\n  const index = Math.floor(Math.random()* wordList.length);\n  const word = wordList[index];\n  return word.toLowerCase();\n}\n\nconst isValidKey = (key, word) =>{\n  if(!word) return false;\n  const result = word.split('').includes(key);\n  return result;\n}\n\nconst Word =({word,validKeys})  =>{\n  if(!word) return null;\n  const joinedKeys = validKeys.join('')\n  const matched = word.slice(0, joinedKeys.length);\n  const remainder = word.slice(joinedKeys.length);\n\n  return (<>\n    <span className=\"matched\">{matched}</span>\n    <span className=\"remainder\">{remainder}</span> \n  </>)\n}\n\nconst App = () => {\n\n  //console.log('word', getWordFile());\n\n  const [getTypedKeys, setTypedKeys] = useState([]);\n  const [getValidKeys, setValidKeys] = useState([]);\n  const [getcompletedWords, setcompletedWords] = useState([]);\n  const [getWord, setWord] = useState('');\n\n  useEffect(()=>{\n    setWord(getWordFile());\n  }, [])\n\n\n  const handleKeyDown = (e) =>{\n    e.preventDefault();\n    const { key } = e;\n    setTypedKeys((prevTypedKeys =>{\n      return [...prevTypedKeys, key].slice(MAX_TYPED_KEYS*-1);\n    }))\n\n    if(isValidKey(key, getWord)){\n      setValidKeys((prev)=>{\n        const isValidLength = prev.length <= getWord.length;\n        const isNextChar = isValidLength && getWord[prev.length] === key;\n\n        console.log(prev, prev.length);\n        console.log(getWord);\n        console.log(isNextChar);\n\n\n        return (isNextChar) ? [...prev, key] : prev;\n      })\n    }\n\n    //console.log(\"key\", key)\n  }\n\n  return (\n  <div className=\"container\" tabIndex=\"0\" onKeyDown={handleKeyDown}>\n    <div className=\"valid-keys\">\n\n      <Word word={getWord} validKeys={getValidKeys} />\n\n      {\n      //<span className=\"matched\">tes</span>\n      //<span className=\"remainder\">te</span> \n      }\n\n    </div>\n    <div className=\"typed-keys\">{getTypedKeys}</div>\n    <div className=\"completed-words\">\n      <ol>\n        <li>teste</li>\n        <li>teste</li>\n      </ol>\n    </div>\n  </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}