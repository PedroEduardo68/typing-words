{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/project/typing/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport wordList from \"./resources/words.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_TYPED_KEYS = 30;\n\nconst getWordFile = () => {\n  const index = Math.floor(Math.random() * wordList.length);\n  const word = wordList[index];\n  return word.toLowerCase();\n};\n\nconst App = () => {\n  _s();\n\n  console.log('word', getWordFile());\n  const [getTypedKeys, setTypedKeys] = useState([]);\n  const [getValidKeys, setValidKeys] = useState([]);\n  const [getWord, setWord] = useState('');\n  useEffect(() => {\n    setWord(getWordFile());\n  }, []);\n\n  const handleKeyDown = e => {\n    e.preventDefault();\n    const {\n      key\n    } = e;\n    setTypedKeys(prevTypedKeys => {\n      return [...prevTypedKeys, key].slice(MAX_TYPED_KEYS * -1);\n    }); //console.log(\"key\", key)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    tabIndex: \"0\",\n    onKeyDown: handleKeyDown,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"valid-keys\",\n      children: /*#__PURE__*/_jsxDEV(Word, {\n        word: getWord,\n        validKeys: getValidKeys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typed-keys\",\n      children: getTypedKeys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completed-words\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"teste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"teste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"ZDNpTCb2Kh058QqotQPQrKQtH/4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pedro/Documents/project/typing/src/App.js"],"names":["React","useEffect","useState","wordList","MAX_TYPED_KEYS","getWordFile","index","Math","floor","random","length","word","toLowerCase","App","console","log","getTypedKeys","setTypedKeys","getValidKeys","setValidKeys","getWord","setWord","handleKeyDown","e","preventDefault","key","prevTypedKeys","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAIA,MAAMC,cAAc,GAAG,EAAvB;;AAEA,MAAMC,WAAW,GAAG,MAAK;AACvB,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAeN,QAAQ,CAACO,MAAnC,CAAd;AACA,QAAMC,IAAI,GAAGR,QAAQ,CAACG,KAAD,CAArB;AACA,SAAOK,IAAI,CAACC,WAAL,EAAP;AACD,CAJD;;AAQA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhBC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBV,WAAW,EAA/B;AAEA,QAAM,CAACW,YAAD,EAAeC,YAAf,IAA+Bf,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACgB,YAAD,EAAeC,YAAf,IAA+BjB,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACkB,OAAD,EAAUC,OAAV,IAAqBnB,QAAQ,CAAC,EAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZoB,IAAAA,OAAO,CAAChB,WAAW,EAAZ,CAAP;AACD,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMiB,aAAa,GAAIC,CAAD,IAAM;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAUF,CAAhB;AACAN,IAAAA,YAAY,CAAES,aAAa,IAAG;AAC5B,aAAO,CAAC,GAAGA,aAAJ,EAAmBD,GAAnB,EAAwBE,KAAxB,CAA8BvB,cAAc,GAAC,CAAC,CAA9C,CAAP;AACD,KAFW,CAAZ,CAH0B,CAO1B;AACD,GARD;;AAUA,sBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,QAAQ,EAAC,GAApC;AAAwC,IAAA,SAAS,EAAEkB,aAAnD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEF,OAAZ;AAAqB,QAAA,SAAS,EAAEF;AAAhC;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BF;AAA7B;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAqBD,CA5CD;;GAAMH,G;;KAAAA,G;AA8CN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport wordList from \"./resources/words.json\"\n\n\n\nconst MAX_TYPED_KEYS = 30;\n\nconst getWordFile = () =>{\n  const index = Math.floor(Math.random()* wordList.length);\n  const word = wordList[index];\n  return word.toLowerCase();\n}\n\n\n\nconst App = () => {\n\n  console.log('word', getWordFile());\n\n  const [getTypedKeys, setTypedKeys] = useState([]);\n  const [getValidKeys, setValidKeys] = useState([]);\n  const [getWord, setWord] = useState('');\n\n  useEffect(()=>{\n    setWord(getWordFile());\n  }, [])\n\n\n  const handleKeyDown = (e) =>{\n    e.preventDefault();\n    const { key } = e;\n    setTypedKeys((prevTypedKeys =>{\n      return [...prevTypedKeys, key].slice(MAX_TYPED_KEYS*-1);\n    }))\n\n    //console.log(\"key\", key)\n  }\n\n  return (\n  <div className=\"container\" tabIndex=\"0\" onKeyDown={handleKeyDown}>\n    <div className=\"valid-keys\">\n\n      <Word word={getWord} validKeys={getValidKeys} />\n\n      {\n      //<span className=\"matched\">tes</span>\n      //<span className=\"remainder\">te</span> \n      }\n\n    </div>\n    <div className=\"typed-keys\">{getTypedKeys}</div>\n    <div className=\"completed-words\">\n      <ol>\n        <li>teste</li>\n        <li>teste</li>\n      </ol>\n    </div>\n  </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}